import React, { useState } from 'react';
import First from '../organisms/First';
import Footer from '../organisms/Footer';
import AtomButton from '../atoms/AtomButton';
import "../../styles/Resena.css";

const rese√±asEjemplo = [
  {
    id: 1,
    nombre: "Yesenia Jara",
    fecha: "2024-01-15",
    calificacion: 5,
    comentario: "¬°El mejor caf√© que he probado! El ambiente es acogedor y el servicio excepcional. Volver√© seguro.",
    avatar: "üë©‚Äçüíº"
  },
  {
    id: 2,
    nombre: "Pablo Martinez",
    fecha: "2024-01-12",
    calificacion: 4,
    comentario: "Muy buen caf√© y pasteles deliciosos. El personal es muy amable. Recomendado.",
    avatar: "üë®‚Äçüíº"
  },
  {
    id: 3,
    nombre: "Daniela Barrera",
    fecha: "2024-01-10",
    calificacion: 5,
    comentario: "Me encanta el caf√© especial que sirven aqu√≠. Perfecto para trabajar o reunirse con amigos.",
    avatar: "üë©‚Äçüéì"
  }
];

export default function Resenas() {
  const [rese√±as, setRese√±as] = useState(rese√±asEjemplo);
  const [mostrarFormulario, setMostrarFormulario] = useState(false);
  const [nuevaRese√±a, setNuevaRese√±a] = useState({
    nombre: '',
    calificacion: 5,
    comentario: ''
  });
  const [enviado, setEnviado] = useState(false);

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setNuevaRese√±a(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleCalificacionClick = (puntos) => {
    setNuevaRese√±a(prev => ({
      ...prev,
      calificacion: puntos
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    
    const rese√±aCompleta = {
      id: rese√±as.length + 1,
      nombre: nuevaRese√±a.nombre || "Cliente An√≥nimo",
      fecha: new Date().toISOString().split('T')[0],
      calificacion: parseInt(nuevaRese√±a.calificacion),
      comentario: nuevaRese√±a.comentario,
      avatar: "üòä"
    };

    setRese√±as(prev => [rese√±aCompleta, ...prev]);
    setEnviado(true);
    setNuevaRese√±a({
      nombre: '',
      calificacion: 5,
      comentario: ''
    });

    setTimeout(() => {
      setEnviado(false);
      setMostrarFormulario(false);
    }, 3000);
  };

  const calcularPromedio = () => {
    if (rese√±as.length === 0) return 0;
    const suma = rese√±as.reduce((acc, rese√±a) => acc + rese√±a.calificacion, 0);
    return (suma / rese√±as.length).toFixed(1);
  };

  const renderEstrellas = (calificacion) => {
    return (
      <div className="estrellas">
        {[1, 2, 3, 4, 5].map((estrella) => (
          <span
            key={estrella}
            className={`estrella ${estrella <= calificacion ? 'activa' : ''}`}
          >
            ‚≠ê
          </span>
        ))}
      </div>
    );
  };

  return (
    <>
      
      <div className="resenas-container">
        <div className="resenas-header">
          <h1>Rese√±as de Nuestros Clientes</h1>
          <p>Comparte tu experiencia y descubre lo que opinan otros clientes</p>
        </div>


        <div className="resenas-stats">
          <div className="stat-card">
            <div className="stat-number">{rese√±as.length}</div>
            <div className="stat-label">Rese√±as Totales</div>
          </div>
          <div className="stat-card">
            <div className="stat-number">{calcularPromedio()}</div>
            <div className="stat-label">Calificaci√≥n Promedio</div>
            <div className="estrellas-pequenas">
              {renderEstrellas(Math.round(calcularPromedio()))}
            </div>
          </div>
          <div className="stat-card">
            <div className="stat-number">
              {rese√±as.filter(r => r.calificacion === 5).length}
            </div>
            <div className="stat-label">Rese√±as 5 Estrellas</div>
          </div>
        </div>

        <div className="agregar-rese√±a-section">
          <AtomButton 
            className="btn-agregar-rese√±a"
            onClick={() => setMostrarFormulario(!mostrarFormulario)}
          >
            {mostrarFormulario ? '‚úï Cancelar' : '‚úçÔ∏è Escribir Mi Rese√±a'}
          </AtomButton>
        </div>

        {mostrarFormulario && (
          <div className="formulario-rese√±a">
            <div className="formulario-card">
              <h3>Comparte Tu Experiencia</h3>
              
              {enviado && (
                <div className="mensaje-exito">
                  ¬°Gracias por tu rese√±a! Tu opini√≥n ha sido publicada.
                </div>
              )}

              <form onSubmit={handleSubmit}>
                <div className="form-group">
                  <label htmlFor="nombre">Tu Nombre (Opcional)</label>
                  <input
                    type="text"
                    id="nombre"
                    name="nombre"
                    value={nuevaRese√±a.nombre}
                    onChange={handleInputChange}
                    placeholder="¬øC√≥mo te llamas?"
                    className="input-rese√±a"
                  />
                </div>

                <div className="form-group">
                  <label>Tu Calificaci√≥n</label>
                  <div className="selector-calificacion">
                    {[1, 2, 3, 4, 5].map((puntos) => (
                      <button
                        key={puntos}
                        type="button"
                        className={`puntuacion-btn ${
                          puntos === nuevaRese√±a.calificacion ? 'seleccionada' : ''
                        }`}
                        onClick={() => handleCalificacionClick(puntos)}
                      >
                        <span className="estrella-btn">
                          {puntos <= nuevaRese√±a.calificacion ? '‚≠ê' : '‚òÜ'}
                        </span>
                        <span className="numero-puntos">{puntos}</span>
                      </button>
                    ))}
                  </div>
                </div>

                <div className="form-group">
                  <label htmlFor="comentario">Tu Rese√±a *</label>
                  <textarea
                    id="comentario"
                    name="comentario"
                    value={nuevaRese√±a.comentario}
                    onChange={handleInputChange}
                    placeholder="Comparte tu experiencia en Caf√© Nebula..."
                    className="textarea-rese√±a"
                    rows="4"
                    required
                  ></textarea>
                </div>

                <AtomButton type="submit" className="btn-enviar-rese√±a">
                  Publicar Rese√±a
                </AtomButton>
              </form>
            </div>
          </div>
        )}

        <div className="lista-resenas">
          <h2>Opiniones de Clientes</h2>
          
          {rese√±as.length === 0 ? (
            <div className="sin-resenas">
              <p>¬°S√© el primero en dejar una rese√±a!</p>
            </div>
          ) : (
            <div className="resenas-grid">
              {rese√±as.map((rese√±a) => (
                <div key={rese√±a.id} className="rese√±a-card">
                  <div className="rese√±a-header">
                    <div className="rese√±a-avatar">
                      {rese√±a.avatar}
                    </div>
                    <div className="rese√±a-info">
                      <h4 className="rese√±a-nombre">{rese√±a.nombre}</h4>
                      <span className="rese√±a-fecha">{rese√±a.fecha}</span>
                    </div>
                  </div>
                  
                  <div className="rese√±a-calificacion">
                    {renderEstrellas(rese√±a.calificacion)}
                  </div>
                  
                  <p className="rese√±a-comentario">{rese√±a.comentario}</p>
                  
                  <div className="rese√±a-acciones">
                    <button className="btn-accion">üëç √ötil</button>
                    <button className="btn-accion">üí¨ Responder</button>
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>
      </div>
    </>
  );
}